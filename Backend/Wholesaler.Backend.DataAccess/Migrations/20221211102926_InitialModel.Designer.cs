// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wholesaler.Backend.DataAccess;

#nullable disable

namespace Wholesaler.Backend.DataAccess.Migrations
{
    [DbContext(typeof(WholesalerContext))]
    [Migration("20221211102926_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Wholesaler.Backend.DataAccess.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Wholesaler.Backend.DataAccess.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaskId")
                        .IsUnique();

                    b.ToTable("People");
                });

            modelBuilder.Entity("Wholesaler.Backend.DataAccess.Models.Requirement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Requirements");
                });

            modelBuilder.Entity("Wholesaler.Backend.DataAccess.Models.WorkTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOfRows")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<Guid>("ReguirementId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReguirementId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Wholesaler.Backend.DataAccess.Models.Person", b =>
                {
                    b.HasOne("Wholesaler.Backend.DataAccess.Models.WorkTask", "Task")
                        .WithOne("Person")
                        .HasForeignKey("Wholesaler.Backend.DataAccess.Models.Person", "TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Wholesaler.Backend.DataAccess.Models.Requirement", b =>
                {
                    b.HasOne("Wholesaler.Backend.DataAccess.Models.Client", "Client")
                        .WithMany("Requirements")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Wholesaler.Backend.DataAccess.Models.WorkTask", b =>
                {
                    b.HasOne("Wholesaler.Backend.DataAccess.Models.Requirement", "Requirement")
                        .WithMany("Tasks")
                        .HasForeignKey("ReguirementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Requirement");
                });

            modelBuilder.Entity("Wholesaler.Backend.DataAccess.Models.Client", b =>
                {
                    b.Navigation("Requirements");
                });

            modelBuilder.Entity("Wholesaler.Backend.DataAccess.Models.Requirement", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Wholesaler.Backend.DataAccess.Models.WorkTask", b =>
                {
                    b.Navigation("Person")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
